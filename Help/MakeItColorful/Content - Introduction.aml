<?xml version="1.0" encoding="utf-8"?>
<topic id="1c2a6866-2869-4203-a950-4beed65c23c3" revisionNumber="1">
	<developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
		<summary>
			<para>
				Welcome to the Make It Colorful User's Manual.  This document will
				assist in integrating this collection of color space types into your
				Unity project.
			</para>
			<alert type="note">
				<para>
					An online version of this documentation is available
					<externalLink>
						<linkText>here</linkText>
						<linkAlternateText>Make It Colorful Online User's Manual at experilous.com</linkAlternateText>
						<linkUri>http://experilous.com/1/product/make-it-colorful/1.0/documentation/html/1c2a6866-2869-4203-a950-4beed65c23c3.htm</linkUri>
					</externalLink>,
					and a downloadable archive for offline use can be acquired
					<externalLink>
						<linkText>here</linkText>
						<linkAlternateText>Make It Colorful Downloadable User's Manual at experilous.com</linkAlternateText>
						<linkUri>http://experilous.com/1/product/make-it-colorful/1.0/documentation/archive</linkUri>
					</externalLink>.
				</para>
			</alert>
		</summary>
		<introduction>
			<autoOutline />
		</introduction>
		<section address="offer">
			<title>What does Make It Colorful offer?</title>
			<content>
				<para>
					Make It Colorful is a collection of color types for use in your
					Unity scripts.  Following the pattern provided by <codeEntityReference qualifyHint="true">T:UnityEngine.Color</codeEntityReference>,
					these types are <codeInline>struct</codeInline>s exposing their
					various color component fields, while also providing some useful
					methods and operators.
				</para>
				<para>
					Each type represents colors within a particular color space,
					making it simple to work with colors within that color space.
					In addition, conversion functions exist to convert from any of
					the available color spaces to any other, including the RGB color
					space as represented by <codeEntityReference qualifyHint="true">T:UnityEngine.Color</codeEntityReference>.
					For example, here is an easy way to get the RGB representation
					of a particular hue:
				</para>
				<code>Color rgb = (Color)new ColorHSV(hue, 1f, 1f);</code>
				<para>
					Linear interpolation between colors is included, which will often
					produce different and more desirable results in other color spaces
					than when interpolating within the RGB color space.  The hue-based
					color spaces will avoid muddy gray middle sections, for example,
					and the HCY color space in particular provides good interpolation
					of apparent vibrance and brightness, whereas other color spaces
					will often produce apparent banding.
				</para>
				<code>ColorHCY hcy = ColorHCY.Lerp(ColorHCY.FromRGB(1f, 0f, 0f), ColorHCY.FromRGB(0f, 0.2f, 0.3f), 0.354f);</code>
				<para>
					Lastly, there are methods to manage the bounds of a color space
					and the uniqueness of individual colors.  The non-HDR RGB color
					space has a range of [0, 1] for each color channel, and the other
					color spaces have corresponding ranges such that every color within
					these ranges will convert to an RGB color within these standard
					bounds.  Methods exist to check if a color is within these bounds,
					and further to clamp to the nearest color within the bounds if not
					already in bounds.  And in some color spaces, certain colors can
					be expressed in more than one way, so each color is defined to have
					a single canonical representation.  Thus, methods exist to check
					if a color is canonical, and to convert to the canonical form
					if not.
				</para>
				<code>
					ColorHCV hcv = new ColorHCV(0.5f, 0.6f, 0.2f, 1.1f);
					Debug.Log(hcv.IsValid());         // false
					Debug.Log(hcv.GetNearestValid()); // HCVA(0.500, 0.400, 0.400, 1.000)

					ColorHSL hsl = new ColorHSL(0.2f, 0f, 0.3f);
					Debug.Log(hsl.IsCanonical());     // false
					Debug.Log(hsl.GetCanonical());    // HSLA(0.000, 0.000, 0.300, 1.000)
				</code>
				<alert class="note">
				  	<para>
				  		Every color space type includes an alpha channel to indicate
				  		opacity, serving the same purpose as in <codeInline>UnityEngine.Color</codeInline>.
				  		When converting between color spaces, opacity plays no role,
				  		and is simply copied directly as is.  For any constructors or
				  		similar functions that leave out opacity, it defaults to 1.
				  	</para>
				</alert>
			</content>
		</section>
		<section address="color-spaces">
			<title>What color spaces are available?</title>
			<content>
				<para>
					<definitionTable>
						<definedTerm><codeEntityReference>T:Experilous.MakeItColorful.ColorCMY</codeEntityReference></definedTerm>
						<definition>
							<para>
								A subtractive color space mimicing cyan, magenta, and yellow inks.
							</para>
						</definition>

						<definedTerm><codeEntityReference>T:Experilous.MakeItColorful.ColorCMYK</codeEntityReference></definedTerm>
						<definition>
							<para>
								A subtractive color space mimicing cyan, magenta, yellow, and black (key) inks.
							</para>
						</definition>

						<definedTerm><codeEntityReference>T:Experilous.MakeItColorful.ColorHSV</codeEntityReference></definedTerm>
						<definition>
							<para>
								A <link xlink:href="4c972cba-9fb1-41a2-a084-244dec5fbc98">hue-based</link>
								color space using <link xlink:href="3358e8a8-72a8-49db-850a-91e04d276ca3#saturation">saturation</link>
								to measure vividness and <link xlink:href="b183794a-9aa9-406a-b60c-b8d4be83ff63#value">value</link> to measure luminance.
							</para>
						</definition>

						<definedTerm><codeEntityReference>T:Experilous.MakeItColorful.ColorHCV</codeEntityReference></definedTerm>
						<definition>
							<para>
								A <link xlink:href="4c972cba-9fb1-41a2-a084-244dec5fbc98">hue-based</link>
								color space using <link xlink:href="3358e8a8-72a8-49db-850a-91e04d276ca3#chroma">chroma</link>
								to measure vividness and <link xlink:href="b183794a-9aa9-406a-b60c-b8d4be83ff63#value">value</link> to measure luminance.
							</para>
						</definition>

						<definedTerm><codeEntityReference>T:Experilous.MakeItColorful.ColorHSL</codeEntityReference></definedTerm>
						<definition>
							<para>
								A <link xlink:href="4c972cba-9fb1-41a2-a084-244dec5fbc98">hue-based</link>
								color space using <link xlink:href="3358e8a8-72a8-49db-850a-91e04d276ca3#saturation">saturation</link>
								to measure vividness and <link xlink:href="b183794a-9aa9-406a-b60c-b8d4be83ff63#lightness">lightness</link> to measure luminance.
							</para>
						</definition>

						<definedTerm><codeEntityReference>T:Experilous.MakeItColorful.ColorHCL</codeEntityReference></definedTerm>
						<definition>
							<para>
								A <link xlink:href="4c972cba-9fb1-41a2-a084-244dec5fbc98">hue-based</link>
								color space using <link xlink:href="3358e8a8-72a8-49db-850a-91e04d276ca3#chroma">chroma</link>
								to measure vividness and <link xlink:href="b183794a-9aa9-406a-b60c-b8d4be83ff63#lightness">lightness</link> to measure luminance.
							</para>
						</definition>

						<definedTerm><codeEntityReference>T:Experilous.MakeItColorful.ColorHSY</codeEntityReference></definedTerm>
						<definition>
							<para>
								A <link xlink:href="4c972cba-9fb1-41a2-a084-244dec5fbc98">hue-based</link>
								color space using <link xlink:href="3358e8a8-72a8-49db-850a-91e04d276ca3#saturation">saturation</link>
								to measure vividness and <link xlink:href="b183794a-9aa9-406a-b60c-b8d4be83ff63#luma">luma</link> to measure luminance.
							</para>
						</definition>

						<definedTerm><codeEntityReference>T:Experilous.MakeItColorful.ColorHCY</codeEntityReference></definedTerm>
						<definition>
							<para>
								A <link xlink:href="4c972cba-9fb1-41a2-a084-244dec5fbc98">hue-based</link>
								color space using <link xlink:href="3358e8a8-72a8-49db-850a-91e04d276ca3#chroma">chroma</link>
								to measure vividness and <link xlink:href="b183794a-9aa9-406a-b60c-b8d4be83ff63#luma">luma</link> to measure luminance.
							</para>
						</definition>
					</definitionTable>
				</para>
			</content>
		</section>
		<section address="example">
			<title>Example Scene</title>
			<content>
				<para>
					A web demo of this example can be found
					<externalLink>
						<linkText>here</linkText>
						<linkAlternateText>Color Spaces Online WebGL Demo</linkAlternateText>
						<linkUri>http://experilous.com/1/product/make-it-colorful/1.0/example/color-spaces/</linkUri>
					</externalLink>.
				</para>
				<para>
					Make It Colorful includes an example scene which will allow you to
					explore the color spaces and their lerping behavior in more depth.
				</para>
				<mediaLink>
					<caption placement="after">The "Color Spaces.unity" demo scene.</caption>
					<image placement="center" xlink:href="color-spaces-demo-scene"/>
				</mediaLink>
				<para>
					You may select which color space you want to work with using the
					toggle buttons along the top.  Drag the hue spectrum slider to
					choose a base color.  The lerp source and target can be activated
					at the bottom left and bottom right, respectively.  When the
					source or target is active, that end of the spectrum will be
					set whenever you select a specific color.
				</para>
				<para>
					To select a color, you may click (or click and drag) anywhere
					within the slice of the color space on the right.  For the RGB,
					CMY, and CMYK color spaces, you make alternatively use the sliders
					that appar on the left when one of those color spaces is selected.
				</para>
				<para>
					For each of the hue-based color spaces, a 3D model of that color
					space will be shown on the left.  The angle around the cylindrical
					shape indicates hue.  The distance from the central vertical axis
					indicates vividness (either chroma or saturation), while the
					height indicates luminance (value, lightness, or luma).  A wedge
					is cut out at the front revealing the slice that is visible on
					the right.  Changing the hue will rotate the colors around the
					vertical axis, and consequently will change the coloration of
					the slice where the wedge is cut out.
				</para>
				<para>
					Hue-based color spaces also include some options for how the
					hue is to be interpolated.  By default it figures out which
					direction around the color wheel is shorter and interpolates
					in that direction.  If you would like to force it to interpolate
					forward or backward, you may select the corresponding toggle at
					the bottom instead.
				</para>
			</content>
		</section>
		<relatedTopics>
			<link xlink:href="4c972cba-9fb1-41a2-a084-244dec5fbc98" /> <!-- Hue -->
			<link xlink:href="3358e8a8-72a8-49db-850a-91e04d276ca3" /> <!-- Vividness -->
			<link xlink:href="b183794a-9aa9-406a-b60c-b8d4be83ff63" /> <!-- Luminance -->
			<link xlink:href="04f81f23-5976-42c4-be55-8d7c01831111" /> <!-- Luminance -->
			<codeEntityReference linkText="API Reference">R:Project_API_Reference</codeEntityReference>
		</relatedTopics>
	</developerConceptualDocument>
</topic>